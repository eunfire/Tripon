<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="free">
    <!-- cateId가 1이고 페이징된 게시글 목록 조회 -->
    <select id="getBoardsByCateIdWithPaging" parameterType="map" resultType="boardDTO">
        SELECT board.*, member.nick FROM board JOIN member ON board.memId = member.memId WHERE cateId = #{cateId}
        ORDER BY boardId DESC
        LIMIT #{startIndex}, #{pageSize};
    </select>

    <!-- cateId가 1인 게시글 목록 조회 -->
    <select id="getBoardCountByCateId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM board WHERE cateId = #{cateId};
    </select>

    <!-- 게시글 상세페이지 조회 -->
    <select id="getBoardById" parameterType="int" resultType="boardDTO">
        SELECT * FROM board WHERE boardId = #{postId};
    </select>

    <!-- 게시글 조회수 증가 -->
    <update id="increaseViews" parameterType="int">
        UPDATE board
        SET views = views + 1
        WHERE boardId = #{postId};
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePostById" parameterType="int">
        DELETE FROM board WHERE boardId = #{postId}
    </delete>

    <!-- 게시글 등록 -->
    <insert id="addPost" parameterType="boardDTO" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO board (`memId`, `cateId`, `title`, `content`, `tStart`, `tEnd`)
        VALUES (#{memId}, #{cateId}, #{title}, #{content}, #{tStart}, #{tEnd})
    </insert>

    <!-- 게시글 수정 -->
    <update id="editPost" parameterType="boardDTO">
        UPDATE board
        SET title = #{title}, tStart = #{tStart}, tEnd = #{tEnd}, content = #{content}
        WHERE boardId = #{boardId};
    </update>

    <!-- 댓글 등록 -->
    <insert id="addComment" parameterType="CommentDTO">
        INSERT INTO boardComment (boardId, nick, bcContent) VALUES (#{boardId}, #{nick}, #{bcContent})
    </insert>

    <!-- 대댓글 등록 -->
    <insert id="add_comment" parameterType="CommentDTO">
        INSERT INTO boardComment (boardId, nick, bcContent, parentId) VALUES (#{boardId}, #{nick}, #{bcContent}, #{parentId})
    </insert>

    <!-- 댓글 조회 -->
    <select id="getCommentsByPostId" parameterType="int" resultType="CommentDTO">
        SELECT * FROM boardComment WHERE boardId = #{postId} order by parentId asc
    </select>

    <!-- 게시물별 좋아요 수 조회 -->
    <select id="getLikeCountByBoardId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM like_table WHERE boardId = #{boardId};
    </select>

    <!-- 좋아요 추가 -->
    <insert id="addLike" parameterType="map">
        INSERT INTO like_table (memId, boardId) VALUES (#{memId}, #{postId});
    </insert>

    <!-- 좋아요 취소 -->
    <delete id="removeLike" parameterType="map">
        DELETE FROM like_table WHERE memId = #{memId} AND boardId = #{postId};
    </delete>

    <!-- 좋아요 조회 -->
    <select id="getIsLiked" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM like_table WHERE boardId = #{postId} AND memId = #{memId};
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteCommentById" parameterType="int">
        DELETE FROM boardComment WHERE bcId = #{bcId}
    </delete>

    <select id="getChildComments" parameterType="int" resultType="CommentDTO">
        SELECT * FROM boardComment WHERE parentId = #{parentId}
    </select>

    <update id="updateDeleteComment" parameterType="int">
        UPDATE boardcomment
        SET deleted = TRUE
        WHERE bcId = #{bcId};
    </update>

    <select id="searchParentId" parameterType="int" resultType="CommentDTO">
        select parentId from boardComment WHERE parentId = #{bcId};
    </select>

    <!-- 삭제 여부 확인 -->
    <select id="deletedComment" parameterType="int" resultType="boolean">
        select deleted from boardComment WHERE bcId = #{bcId};
    </select>

    <select id="searchParentBcId" parameterType="int" resultType="int">
        SELECT parentId FROM boardComment WHERE bcId = #{bcId};
    </select>

    <!-- 댓글 수정 -->
    <update id="editComment" parameterType="CommentDTO">
        UPDATE boardComment
        SET bcContent = #{bcContent} WHERE bcId = #{bcId};
    </update>

    <!-- 파일 저장 -->
    <insert id="saveFile" parameterType="ImageDTO">
        INSERT INTO images (boardId, orginName, saveName, path, sequence)
        VALUES (#{boardId}, #{orginName}, #{saveName}, #{path}, #{sequence});
    </insert>

    <!-- 파일 조회 -->
    <select id="viewImg" parameterType="int" resultType="String">
        SELECT saveName FROM images WHERE boardId = #{postId};
    </select>

</mapper>